{"ast":null,"code":"import axios from \"axios\"; // import { Message } from \"element-ui\";\n// import qs from \"qs\";\n// 使用由库提供的配置的默认值来创建实例\n// 此时超时配置的默认值是 `0`\n// 覆写库的超时默认值\n// 现在，在超时前，所有请求都会等待 2.5 秒\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  timeout: 25000\n}); // 添加请求拦截器\n\ninstance.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  // let token = getCookie(\"token\");\n  // config.headers[\"Authori-zation\"] = \"Bearer \" + token;\n  console.log(\"请求拦截器启动！\");\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\ninstance.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  // if (response.data.status !== 200) {\n  //     Message.error(response.data.msg);\n  // }\n  console.log(\"响应拦截器启动！\");\n  return response.data;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\n\nconst get = (url, data) => {\n  return new Promise((resolve, reject) => {\n    instance.get(url, {\n      params: data\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nconst deleter = (url, data) => {\n  return new Promise((resolve, reject) => {\n    instance.delete(url, {\n      params: data\n    }).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nconst post = (url, data) => {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nconst put = (url, data) => {\n  return new Promise((resolve, reject) => {\n    instance.put(url, data).then(res => {\n      resolve(res);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n};\n\nexport { get, post, deleter, put };","map":{"version":3,"names":["axios","instance","create","baseURL","timeout","interceptors","request","use","config","console","log","error","Promise","reject","response","data","get","url","resolve","params","then","res","catch","err","deleter","delete","post","put"],"sources":["C:/Users/w1211/Desktop/vue/src/utils/http.js"],"sourcesContent":["import axios from \"axios\";\r\n// import { Message } from \"element-ui\";\r\n// import qs from \"qs\";\r\n// 使用由库提供的配置的默认值来创建实例\r\n// 此时超时配置的默认值是 `0`\r\n// 覆写库的超时默认值\r\n// 现在，在超时前，所有请求都会等待 2.5 秒\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n    timeout: 25000,\r\n});\r\n// 添加请求拦截器\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        // 在发送请求之前做些什么\r\n        // let token = getCookie(\"token\");\r\n        // config.headers[\"Authori-zation\"] = \"Bearer \" + token;\r\n        console.log(\"请求拦截器启动！\");\r\n        return config;\r\n    },\r\n    function (error) {\r\n        // 对请求错误做些什么\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n// 添加响应拦截器\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        // 对响应数据做点什么\r\n        // if (response.data.status !== 200) {\r\n        //     Message.error(response.data.msg);\r\n        // }\r\n        console.log(\"响应拦截器启动！\");\r\n        return response.data;\r\n    },\r\n    function (error) {\r\n        // 对响应错误做点什么\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst get = (url, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance\r\n            .get(url, { params: data })\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\nconst deleter = (url, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance\r\n            .delete(url, { params: data })\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\nconst post = (url, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance\r\n            .post(url, data)\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\nconst put = (url, data) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance\r\n            .put(url, data)\r\n            .then((res) => {\r\n                resolve(res);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\nexport { get, post, deleter, put };\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC1BC,OAAO,EAAE,uBADiB;EAE1BC,OAAO,EAAE;AAFiB,CAAb,CAAjB,C,CAIA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,UAAUC,MAAV,EAAkB;EACd;EACA;EACA;EACAC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACA,OAAOF,MAAP;AACH,CAPL,EAQI,UAAUG,KAAV,EAAiB;EACb;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAXL,E,CAaA;;AACAV,QAAQ,CAACI,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CACI,UAAUO,QAAV,EAAoB;EAChB;EACA;EACA;EACA;EACAL,OAAO,CAACC,GAAR,CAAY,UAAZ;EACA,OAAOI,QAAQ,CAACC,IAAhB;AACH,CARL,EASI,UAAUJ,KAAV,EAAiB;EACb;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAZL;;AAeA,MAAMK,GAAG,GAAG,CAACC,GAAD,EAAMF,IAAN,KAAe;EACvB,OAAO,IAAIH,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;IACpCZ,QAAQ,CACHe,GADL,CACSC,GADT,EACc;MAAEE,MAAM,EAAEJ;IAAV,CADd,EAEKK,IAFL,CAEWC,GAAD,IAAS;MACXH,OAAO,CAACG,GAAD,CAAP;IACH,CAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;MACZV,MAAM,CAACU,GAAD,CAAN;IACH,CAPL;EAQH,CATM,CAAP;AAUH,CAXD;;AAYA,MAAMC,OAAO,GAAG,CAACP,GAAD,EAAMF,IAAN,KAAe;EAC3B,OAAO,IAAIH,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;IACpCZ,QAAQ,CACHwB,MADL,CACYR,GADZ,EACiB;MAAEE,MAAM,EAAEJ;IAAV,CADjB,EAEKK,IAFL,CAEWC,GAAD,IAAS;MACXH,OAAO,CAACG,GAAD,CAAP;IACH,CAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;MACZV,MAAM,CAACU,GAAD,CAAN;IACH,CAPL;EAQH,CATM,CAAP;AAUH,CAXD;;AAYA,MAAMG,IAAI,GAAG,CAACT,GAAD,EAAMF,IAAN,KAAe;EACxB,OAAO,IAAIH,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;IACpCZ,QAAQ,CACHyB,IADL,CACUT,GADV,EACeF,IADf,EAEKK,IAFL,CAEWC,GAAD,IAAS;MACXH,OAAO,CAACG,GAAD,CAAP;IACH,CAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;MACZV,MAAM,CAACU,GAAD,CAAN;IACH,CAPL;EAQH,CATM,CAAP;AAUH,CAXD;;AAYA,MAAMI,GAAG,GAAG,CAACV,GAAD,EAAMF,IAAN,KAAe;EACvB,OAAO,IAAIH,OAAJ,CAAY,CAACM,OAAD,EAAUL,MAAV,KAAqB;IACpCZ,QAAQ,CACH0B,GADL,CACSV,GADT,EACcF,IADd,EAEKK,IAFL,CAEWC,GAAD,IAAS;MACXH,OAAO,CAACG,GAAD,CAAP;IACH,CAJL,EAKKC,KALL,CAKYC,GAAD,IAAS;MACZV,MAAM,CAACU,GAAD,CAAN;IACH,CAPL;EAQH,CATM,CAAP;AAUH,CAXD;;AAYA,SAASP,GAAT,EAAcU,IAAd,EAAoBF,OAApB,EAA6BG,GAA7B"},"metadata":{},"sourceType":"module"}